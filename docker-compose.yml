version: '3.5'

services:
  snippet-runner:
    container_name: 'snippet-runner'
    image: ghcr.io/printscript-ingsis/snippet-runner:${IMAGE_TAG}
    restart: always
    ports:
      - '8082:8082'

  snippet-permission:
    container_name: 'snippet-permission'
    image: ghcr.io/printscript-ingsis/snippet-permission:${IMAGE_TAG}
    restart: always
    ports:
      - '8081:8081'
    environment:
      POSTGRES_USER: ${PERMISSION_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PERMISSION_POSTGRES_PASSWORD}
      DB_NAME: ${PERMISSION_POSTGRES_DB}
      DB_HOST: ${PERMISSION_DB_HOST}
      DB_PORT: ${PERMISSION_DB_PORT}
    depends_on:
      - permission-db

  snippet-manager:
    container_name: 'snippet-manager'
    image: ghcr.io/printscript-ingsis/snippet-manager:main
    restart: always
    ports:
      - '8083:8083'
    environment:
      POSTGRES_USER: ${MANAGER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MANAGER_POSTGRES_PASSWORD}
      DB_NAME: ${MANAGER_POSTGRES_DB}
      DB_HOST: ${MANAGER_DB_HOST}
      DB_PORT: ${MANAGER_DB_PORT}
    depends_on:
      - manager-db
      - snippet-permission
      - snippet-runner

  permission-db:
    container_name: 'permission-db-postgres'
    image: postgres:alpine
    restart: always
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: ${PERMISSION_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PERMISSION_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PERMISSION_POSTGRES_DB}
    volumes:
      - permission-db:/var/lib/postgresql/data

  manager-db:
    container_name: 'manager-db-postgres'
    image: postgres:alpine
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${MANAGER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MANAGER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MANAGER_POSTGRES_DB}
    volumes:
      - manager-db:/var/lib/postgresql/data

  reverse-proxy:
    container_name: 'reverse-proxy'
    image: nginx:alpine
    ports:
      - '80:80'
      - '443:443'
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./static:/usr/share/nginx/html:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./nginx_init.sh:/nginx_init.sh
    depends_on:
      - snippet-manager
      - snippet-permission
      - snippet-runner
    entrypoint: ["/bin/sh", "/nginx_init.sh"]

  certbot:
    container_name: "certbot"
    image: certbot/certbot:latest
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot/ --force-renewal --email monosteve123@gmail.com -d $DOMAIN_NAME --agree-tos

volumes:
  permission-db:
  manager-db: